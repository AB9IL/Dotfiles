# Basic vars
set shell sh
set preview true
set previewer pistol
set ratios 1:2:3
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set hidden true
set icons		# Enable icons. Requires nerd fonts and LF_ICONS variable.

# cmds/functions
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*) sensible-editor "${f}" ;;
        application/pdf) zathura "${f}" ;;
				audio/*) xdg-open "${f}" ;;
				image/*) sxiv -q "${f}" >/dev/null 2>&1 ;;
        video/*) xdg-open "${f}" ;;
        *) xdg-open "${f}" ;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd bulkrename ${{
    vidir
}}


cmd delete ${{
	set -f
	printf "%s\n\t" "$f"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf $f
}}

cmd moveto ${{
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval mv -iv $f $dest &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	set -f
	clear; echo "Copy to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval cp -ivr $f $dest &&
	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

# Select a file by using fzf
cmd fzf_jump ${{
    res="$(fd -H  | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}

# Select a file from a locate query
cmd Locate ${{
    res=`locate -i -- "$@" | fzf --prompt "locate $@> "`
    if [ "$res" ]; then
        if [ -d "$res" ]; then
            lf -remote "send $id cd \"$res\""
        else
            lf -remote "send $id select \"$res\""
        fi
    fi
}}

# search contents of files
cmd fzf_search ${{
    cmd="rga --column --no-heading --color=always --smart-case"
    fzf --ansi --disabled --layout=reverse --prompt="Search in files: " --delimiter=: \
        --bind="start:reload([ -n {q} ] && $cmd -- {q} || true)" \
        --bind="change:reload([ -n {q} ] && $cmd -- {q} || true)" \
        --bind='enter:become(lf -remote "send $id select \"$(printf "%s" {1} | sed '\''s/\\/\\\\/g;s/"/\\"/g'\'')\"")' \
        #--preview='bat --color=always -- {1}' # Use your favorite previewer here (bat, source-highlight, etc.), for example:
}}


# cmd="rga --pretty"
#     fzf --ansi --disabled --layout=reverse --header="Search in files" --delimiter=: \
#         --bind="start:reload([ -n {q} ] && $cmd -- {q} || true)" \
#         --bind="change:reload([ -n {q} ] && $cmd -- {q} || true)" \
#         --bind='enter:become(lf -remote "send $id select \"$(printf "%s" {1} | sed '\''s/\\/\\\\/g;s/"/\\"/g'\'')\"")' \
#         --preview='bat -- {1}' # Use your favorite previewer here (bat, source-highlight, etc.), for example:


# Bindings
map ,
map ,l push :Locate<space>
map c $lf -remote "send $id cd $(cut -d'	' -f2 ~/.config/directories | fzf)"
map <c-f> :fzf_jump
map J $lf -remote "send $id cd $(cut -d'	' -f2 ~/.config/directories | fzf)"
map f :fzf_search
map g top
map D delete
map C copyto
map M moveto
map a push %mkdir<space>
map r push :rename<space>
map R $lf -remote "send $id push :rename<space>$f"
map b bulkrename
map <c-r> reload
map <enter> shell
map x $$f
map X !$f
map o open $f
map O open --ask $f
map <esc> :quit
map q :quit
